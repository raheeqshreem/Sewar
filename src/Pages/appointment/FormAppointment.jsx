import "bootstrap/dist/css/bootstrap.min.css";
import { useState } from "react";
import { Form, InputGroup } from "react-bootstrap";
import {  useNavigate } from "react-router-dom";

export default function FormAppointment() {
  const [step, setStep] = useState(1); // ุงููุฑุญูุฉ: 1 ุจูุงูุงุชุ 2-3 ุฃุณุฆูุฉ
    const navigate = useNavigate();
const [uploadedImages, setUploadedImages] = useState([]);
  const [formData, setFormData] = useState({
    name: "",
    age: "",
    phone: "",
    category: "",
    countryCode: "",
    job: "",
    pregnancyAge: "",
    medicalStatus: "",
  });

  const [errors, setErrors] = useState({});
  const [answers, setAnswers] = useState({}); // ุฅุฌุงุจุงุช ุงูุฃุณุฆูุฉ

  // ๐น ุนูุฏ ุชุบููุฑ ุฃู ุญูู
  const handleChange = (e) => {
  const { name, value } = e.target;
  if (step === 1) {
    setFormData({ ...formData, [name]: value });

    let errorMsg = "";

    if (name === "name") {
      if (!value.trim()) errorMsg = "ูุฌุจ ุฅุฏุฎุงู ุงูุงุณู";
      else if (!/^[\u0621-\u064Aa-zA-Z\s]+$/.test(value.trim()))
        errorMsg = "ูุฌุจ ุฃู ูุญุชูู ุงูุงุณู ุนูู ุญุฑูู ููุท";
    }

    if (name === "age" && value && !/^\d+$/.test(value)) errorMsg = "ูุฑุฌู ุฅุฏุฎุงู ุฑูู";
    if (name === "phone" && value && !/^\d+$/.test(value)) errorMsg = "ูุฑุฌู ุฅุฏุฎุงู ุฑูู";

    setErrors((prev) => ({ ...prev, [name]: errorMsg }));
  } else {
    setAnswers({ ...answers, [name]: value });
  }
};

  // ๐ธ ุงูุชุญูู ูู ุตุญุฉ ุงูุจูุงูุงุช
  const validate = () => {
    const newErrors = {};
    if (!formData.name.trim()) newErrors.name = "ูุฌุจ ุฅุฏุฎุงู ุงูุงุณู";
    else if (!/^[\u0621-\u064Aa-zA-Z\s]+$/.test(formData.name.trim()))
      newErrors.name = "ูุฌุจ ุฃู ูุญุชูู ุงูุงุณู ุนูู ุญุฑูู ููุท";

    if (!formData.age) 
      newErrors.age = "ูุฌุจ ุฅุฏุฎุงู ุงูุนูุฑ ";
    if (!formData.phone) 
      newErrors.phone = "ูุฌุจ ุฅุฏุฎุงู ุฑูู ุงููุงุชู";
    

    if (!formData.countryCode) newErrors.countryCode = "ุงุฎุชุฑ ุฑูุฒ ุงูุฏููุฉ";
    if (!formData.category) newErrors.category = "ูุฌุจ ุงุฎุชูุงุฑ ุงููุฆุฉ";

    if (formData.category === "ูุณุงุก" || formData.category === "ุฃุทูุงู") {
      if (!formData.medicalStatus.trim()) {
        newErrors.medicalStatus = "ูุฑุฌู ุงุฎุชูุงุฑ ุญุงูุชู ุงููุฑุถูุฉ";
      }
    }

    return newErrors;
  };

  // ๐ธ ุนูุฏ ุงูุถุบุท ุนูู ุฒุฑ ุงูุชุงูู / ุชุซุจูุช ุงูุญุฌุฒ / ุฅุฑุณุงู
  const handleSubmit = (e) => {
    e.preventDefault();

    if (step === 1) {
      const validationErrors = validate();
      if (Object.keys(validationErrors).length > 0) {
        setErrors(validationErrors);
        return;
      }

      if (formData.medicalStatus === "ูุฑุงุฌุนุฉ") {
        console.log("โ ุชู ุชุซุจูุช ุงูุญุฌุฒ:", { formData });
        alert("ุชู ุชุซุจูุช ููุนุฏู ุจูุฌุงุญ โ");
        return;
      }

      setStep(2);
    } else if (step === 2) {
      setStep(3);
    } else {
      console.log("โ ุชู ุฅุฑุณุงู ุงูุจูุงูุงุช:", { formData, answers });
      alert("ุชู ุฅุฑุณุงู ุฌููุน ุงูุจูุงูุงุช ุจูุฌุงุญ โ");
    }
  };

  // ๐น ุฒุฑ ุงูุณุงุจู
  const handlePrevious = () => {
    if (step > 1) setStep(step - 1);
  };

  // ๐น ููููู ุงูุฃุณุฆูุฉ (ุงูุฌุฒุก ุงูุฃูู ูุงูุซุงูู)
  const renderQuestions = () => {
    const section1 = [
      "ูุงุฐุง ุญุฏุซ ูุนูุ",
      "ูุชู ุจุฏุฃุช ุงููุดููุฉุ",
      "ููู ุจุฏุฃุชุ ูุฌุฃุฉ ุฃู ุชุฏุฑูุฌูุงูุ",
      "ูู ุฃุฎุฏุช ุนูุงุฌ ุฃู ุนููุช ูุญูุตุงุชุ",
      "ูู ุชุนุงูู ูู ุฃูุฑุงุถ ูุฒููุฉ ุ ูู ููุฌุฏ ุฃุฏููุฉ ุชุชูุงูููุง ุจุงุณุชูุฑุงุฑ ุูู ููุช ุจุงุฌุฑุงุก ุนูููุงุช ุฌุฑุงุญูุฉ ุณุงุจูุฉ ุ",
      "ููู ุฃุซูุฑุช ุญุงูุชู ุงููุฑุถูุฉ ุนูู ุญูุงุชู ุงูููููุฉุ ูุซู ุนูููุ ุญูุงุชู ุงูุนุงุฆููุฉ ุ ููุงู ุณููู ุฃู ุชููููุ",
      "ูู ุณุจู ูู ุฃู ุฃุฌุฑูุช ูุญูุตุงุช ุชุตููุฑ ูุซู ุงูุฃุดุนุฉ ุงูุณูููุฉ ุฃู ุงูุฑููู ุงููุบูุงุทูุณู ุงููุชุนููุฉ ุจูุฐู ุงููุดููุฉุ ูุฅุฐุง ูุงู ุงูุฌูุงุจ ูุนูุ ูู ููููู ุชุฒููุฏู ุจูุชุงุฆุฌ ูุฐู ุงููุญูุตุงุชุ",
    ];

    const section2 = [
      "ููู ุชุตู ุทุจูุนุฉ ุงูุฃููุ (ุญุงุฑูุ ูุงุจุถุ ุญุงุฏุ ุฅูุฎ)",
      "ูุง ูู ูุฏู ุดุฏุฉ ุงูุฃูู ูู 0 ุฅูู 10ุ",
      "ูู ุงูุฃูู ูุณุชูุฑ ุฃู ูุชูุทุนุ",
      "ูุง ูู ุงูุนูุงูู ุงูุชู ุชุฒูุฏ ุงูุฃูู ุฃู ุชุฎูููุ",
      "ูู ููุงู ุฃู ุฃุนุฑุงุถ ูุตุงุญุจุฉ ูุซู ุงูุชูููู ุฃู ุถุนู ุงูุญุฑูุฉ ุฃู ุชูุฑู .. ",
      "ูู ุงูุฃูู ุฃู ุงูุฅุญุณุงุณ ุจููุชูู ูููุงู ุงุฎุฑ ุ",
    ];

    const questions = step === 2 ? section1 : section2;

    return (
      <div className="container" style={{ maxWidth: "600px" }}>
        <div className="p-4 rounded shadow" style={{ backgroundColor: "rgba(255,255,255,0.9)" }}>
          <h4 className="mb-4" style={{ color: "#2a7371" }}>
            {step === 2 ? "ุงูุฃุณุฆูุฉ ุงูุทุจูุฉ (ุงุฎุชูุงุฑู)" : "ุงูุฃุณุฆูุฉ ุงูุทุจูุฉ (ุงุฎุชูุงุฑู)"}
          </h4>
          <Form onSubmit={handleSubmit}>
            {questions.map((q, index) => (
              <Form.Group key={index} style={{ marginBottom: "25px" }}>
  <Form.Label style={{ color: "#2a7371", float: "right" }}>{q}</Form.Label>
  <Form.Control
    as="textarea"
    rows={2}
    name={`q${step}-${index}`}
    value={answers[`q${step}-${index}`] || ""}
    onChange={handleChange}
    style={{
      border: "2px solid #2a7371",
      color: "#2a7371",
      direction: "rtl",
      textAlign: "right",
      borderRadius: "7px",
    }}
  />

  {/* ๐ผ๏ธ ุฑูุน ุงูุตูุฑ + ุฒุฑ ุญุฐู */}
  {index === section1.length - 1 && (
    <>
      <Form.Control
        type="file"
        multiple
        onChange={(e) => {
          const files = Array.from(e.target.files);
          const urls = files.map((file) => URL.createObjectURL(file));
          setUploadedImages((prev) => [...prev, ...urls]);
        }}
        style={{ marginTop: "10px" }}
      />

      <div style={{ display: "flex", gap: "10px", flexWrap: "wrap", marginTop: "10px" }}>
        {uploadedImages.map((img, idx) => (
          <div key={idx} style={{ position: "relative", width: "80px", height: "80px" }}>
            <img
              src={img}
              alt={`upload-${idx}`}
              style={{ width: "100%", height: "100%", objectFit: "cover", borderRadius: "5px" }}
            />
           <button
  type="button"
  onClick={() => setUploadedImages((prev) => prev.filter((_, i) => i !== idx))}
  style={{
    position: "absolute",
    top: "2px",
    right: "2px",
    background: "red",
    border: "none",
    borderRadius: "50%",
    width: "18px",
    height: "18px",
    color: "#fff",
    fontWeight: "bold",
    fontSize: "12px",
    lineHeight: "18px",
    textAlign: "center",
    padding: "0",
    cursor: "pointer",
  }}
>
  โ
</button>
          </div>
        ))}
      </div>
    </>
  )}
</Form.Group>
            ))}
           <div className="d-flex " style={{ gap: "20px" }}>
  {step > 1 && (
   <button
    type="button"
    onClick={() => {
      if (step === 1) {
        // ุงุฑุฌุน ูุตูุญุฉ appointment
        window.location.href = "/appointment"; // ุฃู ุงุณุชุฎุฏู useNavigate ุฅุฐุง React Router
      } else {
        handlePrevious();
      }
    }}
    style={{
      flex: 1,
      backgroundColor: "#2a7371",
      border: "none",
      fontSize: "20px",
      padding: "12px 0",
      color: "#fff",
      borderRadius: "8px",
    }}
  >
    โฌ๏ธ ุงูุณุงุจู
  </button>
)}
  
  <button
    type="submit"
    style={{
      flex:1,
      backgroundColor: "#2a7371",
      border: "none",
      fontSize: "20px",
      padding: "12px 24px",
      color: "#fff",
      borderRadius: "8px",
    }}
  >
{step === 1 && formData.medicalStatus === "ูุฑุงุฌุนุฉ"
      ? "ุชุซุจูุช ุงูุญุฌุฒ"
      : step === 1
      ? "ุงูุชุงูู โก๏ธ"
      : step === 2
      ? "ุงูุชุงูู โก๏ธ"
      : "ุฅุฑุณุงู โ"}     
  </button>
</div>
          </Form>
        </div>
      </div>
    );
  };

  return (
    <div
      style={{
        minHeight: "100dvh",
        width: "100%",
        padding: "100px 20px 50px 20px",
        display: "flex",
        flexDirection: "column",
        justifyContent: "flex-start",
        alignItems: "center",
        backgroundColor: "#f0f4f7",
        overflowY: "auto",
        color: "#2a7371",
        textAlign: "center",
        backgroundImage: `
          radial-gradient(circle at 5% 10%, rgba(42,115,113,0.10) 25px, transparent 26px),
          radial-gradient(circle at 20% 25%, rgba(42,115,113,0.08) 20px, transparent 21px),
          radial-gradient(circle at 50% 75%, rgba(42,115,113,0.07) 20px, transparent 21px),
          radial-gradient(circle at 90% 80%, rgba(42,115,113,0.09) 30px, transparent 25px),
          radial-gradient(circle at 35% 40%, rgba(42,115,113,0.12) 30px, transparent 30px),
          radial-gradient(circle at 50% 15%, rgba(42,115,113,0.10) 28px, transparent 29px),
          radial-gradient(circle at 65% 35%, rgba(42,115,113,0.08) 35px, transparent 36px),
          radial-gradient(circle at 40% 75%, rgba(42,115,113,0.07) 20px, transparent 21px),
          radial-gradient(circle at 60% 80%, rgba(42,115,113,0.09) 30px, transparent 36px),
          radial-gradient(circle at 80% 20%, rgba(42,115,113,0.09) 25px, transparent 26px),
          radial-gradient(circle at 10% 60%, rgba(42,115,113,0.12) 30px, transparent 31px),
          radial-gradient(circle at 25% 75%, rgba(42,115,113,0.07) 20px, transparent 21px),
          radial-gradient(circle at 55% 90%, rgba(42,115,113,0.09) 30px, transparent 22px),
          radial-gradient(circle at 75% 65%, rgba(42,115,113,0.11) 22px, transparent 23px)
        `,
        backgroundRepeat: "no-repeat",
      }}
    >
      {step === 1 ? (
        <div className="container" style={{ maxWidth: "500px" }}>
          <div className="p-4 rounded shadow" style={{ backgroundColor: "rgba(255,255,255,0.9)", position : "relative" }}>


<button
    type="button"
    onClick={() =>navigate( "/appointment")} // ูุฑุฌุน ูุตูุญุฉ ุงูููุงุนูุฏ
    style={{
      position: "absolute",
      top: "10px",
      right: "10px",
      background: "#faa3a3ff",
      border: "none",
      fontSize: "22px",
      fontWeight: "bold",
      color: "#faa3a3ff",
      cursor: "pointer",
    }}
  >
    โ
  </button>



            <h3 className="mb-4" style={{ paddingBottom: "30px" }}>ุจูุงูุงุช ุงููุฑูุถ</h3>

            <Form onSubmit={handleSubmit} noValidate>
              {/* ุงูุงุณู */}
              <Form.Group style={{ marginBottom: "30px" }} controlId="formName">
                <Form.Control
                  type="text"
                  placeholder="ุฃุฏุฎู ุงุณู ุงููุฑูุถ"
                  name="name"
                  value={formData.name}
                  onChange={handleChange}
                  isInvalid={!!errors.name}
                  style={{
                    border: "2px solid #2a7371",
                    color: "#2a7371",
                    direction: "rtl",
                    textAlign: "right",
                  }}
                />
                {errors.name && <div className="text-danger text-end mt-2">{errors.name}</div>}
              </Form.Group>

              {/* ุงูุนูุฑ */}
              <Form.Group style={{ marginBottom: "30px" }} controlId="formAge">
                <Form.Control
                  type="text"
                  placeholder="ุฃุฏุฎู ุนูุฑ ุงููุฑูุถ"
                  name="age"
                  value={formData.age}
                  onChange={handleChange}
                  isInvalid={!!errors.age}
                  style={{
                    border: "2px solid #2a7371",
                    color: "#2a7371",
                    direction: "rtl",
                    textAlign: "right",
                  }}
                />
                {errors.age && <div className="text-danger text-end mt-2">{errors.age}</div>}
              </Form.Group>

              {/* ุงููุงุชู */}
              <Form.Group style={{ marginBottom: "30px", direction: "rtl", textAlign: "right" }} controlId="formPhone">
                <InputGroup>
                  <Form.Select
                    name="countryCode"
                    value={formData.countryCode}
                    onChange={handleChange}
                    isInvalid={!!errors.countryCode}
                    style={{
                      maxWidth: "160px",
                      border: "2px solid #2a7371",
                      color: "#2a7371",
                      fontSize: "15px",
                      marginLeft: "10px",
                      borderRadius: "7px",
                    }}
                  >
                    <option value="">ุฑูุฒ ุงูุฏููุฉ</option>
                    <option value="+970">ููุณุทูู +970</option>
                    <option value="+972">ุฅุณุฑุงุฆูู +972</option>
                    <option value="+962">ุงูุฃุฑุฏู +962</option>
                    <option value="+966">ุงูุณุนูุฏูุฉ +966</option>
                    <option value="+971">ุงูุฅูุงุฑุงุช +971</option>
                    <option value="+20">ูุตุฑ +20</option>
                  </Form.Select>

                  <Form.Control
                    type="text"
                    placeholder="ุฃุฏุฎู ุฑูู ุงููุงุชู"
                    name="phone"
                    value={formData.phone}
                    onChange={handleChange}
                    isInvalid={!!errors.phone}
                    style={{
                      border: "2px solid #2a7371",
                      color: "#2a7371",
                      direction: "rtl",
                      textAlign: "right",
                      borderRadius: "7px",
                    }}
                  />
                </InputGroup>
                {(errors.countryCode || errors.phone) && (
                  <div className="text-danger text-end mt-2">{errors.countryCode || errors.phone}</div>
                )}
              </Form.Group>

              {/* ุงููุฆุฉ */}
              <Form.Group style={{ marginBottom: "30px" }} controlId="formCategory">
                <Form.Select
                  name="category"
                  value={formData.category}
                  onChange={handleChange}
                  isInvalid={!!errors.category}
                  style={{
                    border: "2px solid #2a7371",
                    color: "#2a7371",
                    direction: "rtl",
                    textAlign: "right",
                  }}
                >
                  <option value="">ุงุฎุชุฑ ุงููุฆุฉ...</option>
                  <option value="ุฃุทูุงู">ุฃุทูุงู</option>
                  <option value="ูุณุงุก">ูุณุงุก</option>
                </Form.Select>
{errors.category && <div className="text-danger text-end mt-2">{errors.category}</div>}
              </Form.Group>

              {(formData.category === "ูุณุงุก" || formData.category === "ุฃุทูุงู") && (
                <>
                  {formData.category === "ูุณุงุก" && (
                    <Form.Group style={{ marginBottom: "30px" }} controlId="formJob">
                      <Form.Control
                        type="text"
                        placeholder="ุงููุธููุฉ (ุงุฎุชูุงุฑู)"
                        name="job"
                        value={formData.job}
                        onChange={handleChange}
                        style={{
                          border: "2px solid #2a7371",
                          color: "#2a7371",
                          direction: "rtl",
                          textAlign: "right",
                        }}
                      />
                    </Form.Group>
                  )}

                  <Form.Group style={{ marginBottom: "30px" }} controlId="formMedicalStatus">
                    <Form.Select
                      name="medicalStatus"
                      value={formData.medicalStatus}
                      onChange={handleChange}
                      isInvalid={!!errors.medicalStatus}
                      style={{
                        border: "2px solid #2a7371",
                        color: "#2a7371",
                        direction: "rtl",
                        textAlign: "right",
                      }}
                    >
                      <option value="">ุงุฎุชุฑ ุงูุญุงูุฉ ุงููุฑุถูุฉ...</option>
                      <option value="ุฌุฏูุฏุฉ">ุญุงูุฉ ูุฑุถูุฉ ุฌุฏูุฏุฉ</option>
                      <option value="ูุฑุงุฌุนุฉ">ูุฑุงุฌุนุฉ</option>
                    </Form.Select>
                    {errors.medicalStatus && (
                      <div className="text-danger text-end mt-2">{errors.medicalStatus}</div>
                    )}
                  </Form.Group>
                </>
              )}

              <button
                type="submit"
                className="w-100"
                style={{
                  backgroundColor: "#2a7371",
                  border: "none",
                  fontSize: "18px",
                  padding: "10px",
                  marginTop: "10px",
                  color: "#fff",
                  borderRadius: "8px",
                }}
              >
                {step === 1 && formData.medicalStatus === "ูุฑุงุฌุนุฉ"
                  ? "ุชุซุจูุช ุงูุญุฌุฒ"
                  : step === 1
                  ? "ุงูุชุงูู โก๏ธ"
                  : step === 2
                  ? "ุงูุชุงูู โก๏ธ"
                  : "ุฅุฑุณุงู โ"}
              </button>
            </Form>
          </div>
        </div>
      ) : (
        renderQuestions()
      )}
    </div>
  );
}